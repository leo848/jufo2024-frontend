import { Color, NamedColor } from '../color/color';
import { HsvColor, RgbColor } from '../color/colorSpaces';
import { rangeMap } from '../utils/math';

function mapBuntstifte(input: [number, number, number][]): NamedColor[] {
	return input
		.map(([r, g, b], index) => ({ r, g, b, index }))
		.map(({ r, g, b, index }) => ({
			color: new RgbColor(r / 255, g / 255, b / 255).color(),
			index
		}))
		.slice(0, 100)
		.toSorted(({ color: c1 }, { color: c2 }) => {
			let o1 = c1.space('oklab');
			let o2 = c2.space('oklab');
			let chromaSquared1 = o1.a * o1.a + o1.b * o1.b;
			let chromaSquared2 = o2.a * o2.a + o2.b * o2.b;
			let hue1 = Math.atan2(o1.b, o1.a);
			let hue2 = Math.atan2(o2.b, o2.a);
			return hue2 - hue1;
		})
		.filter(({ index }) => index % 2 == 0)
		.map(({ color, index }) => NamedColor.fromColor(color, leftPadZeroes(3, index + 1)));
}

function dedup(array: Color[]): Color[] {
	return array.filter(
		(c, i, a) => i == a.length - 1 || c.rgb().numeric() != a[i + 1].rgb().numeric()
	);
}

const books = {
	name: 'Mathematikbücher',
	colors: (
		[
			['mit der eins fängt alles an', 242, 240, 238],
			['mathe macciato', 212, 188, 0],
			['rechnen und raten', 240, 198, 33],
			['mathematisches problemlösen und beweisen', 230, 109, 0],
			['von ziffern zahlen und zeichen', 185, 112, 29],
			['mathe magie für durchblicker', 217, 73, 51],
			['nullen machen einsen groß', 191, 44, 38],
			['damit hatte keiner gerechnet', 190, 34, 39],
			['eine null im alltag', 211, 57, 37],
			['Zahlen, bitte!', 203, 83, 113],
			['rechnen mit dem weltmeister', 72, 4, 54],
			['mathematische detektivgeschichten', 188, 225, 244],
			['zahlen spiralen und magische quadrate', 133, 184, 213],
			['schülerduden mathematik ii', 93, 167, 245],
			['rechnen ohne taschenrechner', 0, 144, 147],
			['100 great problems of elementary mathematics', 57, 57, 112],
			['dtv atlas schulmathematik', 0, 37, 107],
			['fünf minuten mathematik', 2, 5, 20],
			['von der pflicht zur kür', 20, 22, 33],
			['nikola teslas rätseluniversum', 51, 64, 94],
			['mathematische knobeleien', 1, 60, 24],
			['fit im kopf', 96, 116, 46],
			['mathematik durch die hintertür', 164, 184, 58],
			['1089 oder das wunder der zahlen', 180, 191, 52],
			['enigma', 231, 175, 114],
			['mathe in 30 sekunden', 202, 173, 117]
		] as const
	).map(([name, r, g, b]) => {
		const rgb = new RgbColor(r / 255, g / 255, b / 255);
		return rgb.color(); //NamedColor.fromColor(rgb.color(), name);
	})
};

const booksDark = {
	name: 'Bücher dunkler',
	colors: dedup(
		books.colors
			.map((c) => c.oklab())
			.map((oklab) => oklab.with('l', rangeMap(oklab.l, [0, 1], [0, 0.775])).color())
	)
};

const presets = {
	// buntstifteAlt: {
	// 	name: 'Buntstifte alt',
	// 	colors: mapBuntstifte([
	// 		[179, 152, 124],
	// 		[155, 128, 105],
	// 		[174, 124, 64],
	// 		[181, 116, 101],
	// 		[18, 16, 5],
	// 		[43, 34, 21],
	// 		[96, 80, 51],
	// 		[61, 44, 35],
	// 		[138, 108, 93],
	// 		[19, 16, 10],
	// 		[24, 15, 13],
	// 		[20, 16, 10],
	// 		[31, 40, 37],
	// 		[39, 37, 46],
	// 		[43, 46, 57],
	// 		[51, 81, 80],
	// 		[35, 29, 37],
	// 		[30, 21, 26],
	// 		[58, 80, 96],
	// 		[80, 96, 101],
	// 		[124, 128, 108],
	// 		[38, 57, 35],
	// 		[42, 65, 43],
	// 		[54, 93, 60],
	// 		[29, 31, 19],
	// 		[48, 45, 21],
	// 		[65, 50, 23],
	// 		[75, 103, 81],
	// 		[49, 87, 42],
	// 		[38, 53, 26],
	// 		[33, 44, 27],
	// 		[98, 113, 56],
	// 		[44, 73, 62],
	// 		[73, 88, 67],
	// 		[64, 94, 54],
	// 		[55, 87, 49],
	// 		[65, 97, 76],
	// 		[77, 91, 52],
	// 		[97, 110, 53],
	// 		[58, 80, 38],
	// 		[118, 138, 54],
	// 		[90, 102, 43],
	// 		[108, 120, 50],
	// 		[133, 140, 53],
	// 		[149, 146, 52],
	// 		[198, 149, 97],
	// 		[203, 175, 117],
	// 		[161, 134, 64],
	// 		[134, 108, 41],
	// 		[199, 168, 83],
	// 		[194, 160, 59],
	// 		[190, 159, 54],
	// 		[185, 157, 52],
	// 		[192, 74, 36],
	// 		[155, 83, 30],
	// 		[191, 106, 40],
	// 		[184, 52, 27],
	// 		[177, 56, 27],
	// 		[166, 53, 24],
	// 		[186, 79, 30],
	// 		[219, 70, 33],
	// 		[222, 44, 32],
	// 		[186, 40, 28],
	// 		[223, 77, 42],
	// 		[225, 57, 41],
	// 		[217, 50, 31],
	// 		[215, 40, 58],
	// 		[155, 29, 28],
	// 		[196, 65, 52],
	// 		[211, 31, 46],
	// 		[204, 31, 24],
	// 		[73, 19, 11],
	// 		[94, 26, 17],
	// 		[184, 25, 18],
	// 		[69, 17, 13],
	// 		[201, 137, 90],
	// 		[174, 78, 37],
	// 		[191, 78, 52],
	// 		[193, 98, 41],
	// 		[189, 81, 41],
	// 		[174, 95, 85],
	// 		[232, 130, 117],
	// 		[187, 106, 94],
	// 		[218, 88, 100],
	// 		[234, 80, 96],
	// 		[232, 131, 130],
	// 		[233, 63, 83],
	// 		[168, 40, 65],
	// 		[215, 63, 78],
	// 		[180, 55, 68],
	// 		[138, 43, 69],
	// 		[165, 75, 89],
	// 		[82, 23, 33],
	// 		[36, 24, 42],
	// 		[48, 30, 56],
	// 		[36, 21, 28],
	// 		[78, 71, 94],
	// 		[63, 27, 45],
	// 		[79, 41, 59],
	// 		[33, 21, 37],
	// 		[84, 40, 16],
	// 		[108, 49, 20],
	// 		[204, 150, 64],
	// 		[203, 137, 49],
	// 		[120, 48, 29],
	// 		[186, 83, 40],
	// 		[154, 61, 30],
	// 		[29, 18, 13],
	// 		[165, 42, 62],
	// 		[107, 21, 17],
	// 		[137, 40, 70],
	// 		[182, 28, 49],
	// 		[71, 18, 16],
	// 		[86, 26, 13],
	// 		[97, 20, 44],
	// 		[181, 53, 26],
	// 		[25, 17, 11],
	// 		[24, 16, 11],
	// 		[48, 22, 13],
	// 		[39, 38, 20],
	// 		[201, 67, 62],
	// 		[200, 58, 43],
	// 		[212, 61, 29],
	// 		[203, 57, 41],
	// 		[204, 51, 45],
	// 		[208, 136, 118],
	// 		[90, 49, 75],
	// 		[134, 44, 34],
	// 		[104, 56, 79],
	// 		[181, 108, 39],
	// 		[157, 57, 29],
	// 		[100, 20, 15],
	// 		[193, 149, 78],
	// 		[57, 55, 44],
	// 		[48, 23, 15],
	// 		[81, 69, 61],
	// 		[150, 118, 46],
	// 		[83, 90, 117],
	// 		[85, 55, 85],
	// 		[52, 71, 108],
	// 		[23, 18, 13],
	// 		[23, 17, 16],
	// 		[49, 30, 22],
	// 		[175, 107, 44],
	// 		[50, 76, 99],
	// 		[27, 22, 15],
	// 		[31, 25, 20],
	// 		[113, 47, 25],
	// 		[145, 118, 103],
	// 		[61, 92, 38],
	// 		[53, 70, 35],
	// 		[104, 56, 32],
	// 		[35, 28, 31],
	// 		[45, 39, 49],
	// 		[47, 80, 98],
	// 		[42, 45, 82],
	// 		[42, 26, 27],
	// 		[41, 77, 76],
	// 		[83, 34, 58],
	// 		[80, 105, 57]
	// 	])
	// },
	buntstifte: {
		name: 'Buntstifte',
		colors: mapBuntstifte([
			[248, 213, 174],
			[192, 155, 124],
			[185, 145, 90],
			[159, 87, 74],
			[21, 15, 11],
			[37, 26, 19],
			[111, 82, 66],
			[81, 58, 42],
			[140, 108, 86],
			[22, 19, 21],
			[27, 28, 30],
			[36, 26, 36],
			[30, 31, 36],
			[45, 82, 113],
			[89, 139, 160],
			[56, 108, 136],
			[37, 50, 71],
			[35, 34, 60],
			[39, 41, 51],
			[61, 95, 115],
			[181, 187, 164],
			[39, 36, 26],
			[41, 55, 36],
			[37, 42, 24],
			[49, 45, 23],
			[56, 59, 23],
			[58, 59, 31],
			[54, 115, 109],
			[101, 153, 83],
			[47, 69, 36],
			[44, 67, 45],
			[56, 107, 88],
			[175, 189, 163],
			[61, 95, 57],
			[76, 139, 99],
			[68, 114, 99],
			[61, 108, 128],
			[122, 156, 139],
			[69, 87, 63],
			[103, 136, 58],
			[61, 107, 52],
			[97, 131, 43],
			[221, 201, 66],
			[148, 161, 56],
			[189, 192, 67],
			[253, 210, 97],
			[254, 215, 110],
			[254, 209, 56],
			[254, 217, 105],
			[254, 205, 47],
			[250, 215, 70],
			[254, 198, 41],
			[254, 205, 47],
			[254, 189, 42],
			[253, 180, 42],
			[254, 167, 24],
			[253, 137, 27],
			[234, 127, 31],
			[244, 80, 23],
			[226, 55, 23],
			[238, 84, 25],
			[211, 60, 24],
			[232, 58, 25],
			[230, 69, 51],
			[211, 45, 32],
			[141, 21, 17],
			[178, 34, 16],
			[185, 28, 17],
			[123, 19, 13],
			[147, 29, 9],
			[151, 25, 20],
			[149, 32, 22],
			[126, 28, 11],
			[114, 23, 13],
			[186, 34, 30],
			[251, 194, 135],
			[253, 173, 78],
			[253, 117, 53],
			[253, 143, 41],
			[252, 150, 59],
			[254, 188, 134],
			[235, 158, 136],
			[252, 86, 90],
			[253, 128, 105],
			[253, 71, 93],
			[249, 60, 86],
			[219, 55, 61],
			[233, 72, 95],
			[125, 48, 65],
			[168, 51, 59],
			[68, 39, 22],
			[86, 51, 56],
			[71, 41, 44],
			[99, 47, 41],
			[67, 52, 48],
			[74, 72, 84],
			[71, 49, 83],
			[75, 60, 70],
			[147, 102, 102],
			[57, 50, 45],
			[69, 45, 37],
			[135, 89, 34],
			[205, 113, 37],
			[213, 129, 25],
			[130, 70, 28],
			[130, 30, 9],
			[196, 100, 41],
			[162, 57, 33],
			[185, 40, 42],
			[168, 54, 36],
			[92, 46, 51],
			[144, 53, 36],
			[102, 41, 26],
			[107, 42, 16],
			[73, 42, 38],
			[155, 50, 25],
			[115, 51, 29],
			[93, 49, 22],
			[84, 39, 18],
			[137, 92, 31],
			[253, 151, 68],
			[253, 126, 69],
			[252, 127, 34],
			[206, 59, 27],
			[221, 70, 45],
			[254, 197, 126],
			[126, 81, 87],
			[160, 70, 39],
			[132, 64, 71],
			[216, 140, 52],
			[174, 85, 33],
			[137, 45, 43],
			[254, 205, 79],
			[98, 83, 48],
			[121, 64, 34],
			[135, 119, 31],
			[169, 132, 110],
			[140, 160, 160],
			[106, 62, 68],
			[59, 59, 58],
			[38, 33, 27],
			[86, 48, 24],
			[72, 43, 27],
			[209, 142, 26],
			[56, 51, 47],
			[194, 65, 18],
			[50, 34, 26],
			[117, 62, 28],
			[186, 154, 120],
			[101, 130, 53],
			[142, 48, 29],
			[241, 195, 123],
			[238, 196, 114],
			[154, 144, 123],
			[128, 132, 115],
			[129, 139, 135],
			[79, 52, 33],
			[154, 156, 129],
			[187, 126, 102],
			[166, 158, 96]
		])
	},
	books,
	booksDark,
	booksDarkByLightness: {
		name: 'Bücher nach Helligkeit',
		colors: books.colors.toSorted((b, a) => a.oklab().l - b.oklab().l)
	},
	booksDarkByHue: {
		name: 'Bücher nach Farbwert',
		colors: books.colors.toSorted((a, b) => {
			let hues = [b, a].map((c) => c.oklab()).map(({ a, b }) => Math.atan2(b, a));
			// let chromas = [b, a].map((c) => c.space("hsl")).map(({ h }) => h);
			return hues[0] - hues[1];
		})
	},
	pride: {
		name: 'Pride-Flagge',
		colors: [0xff1e26, 0xfe941e, 0xffff00, 0x06bd00, 0x001a98, 0x760088].map((num) =>
			RgbColor.fromNumeric(num).color()
		)
	},
	pearls: {
		name: 'Perlen',
		colors: [
			[79, 10, 17],
			[95, 33, 21],
			[96, 52, 15],
			[87, 78, 88],
			[96, 64, 43],
			[93, 82, 25],
			[91, 88, 39],
			[91, 85, 73],
			[37, 76, 64],
			[2, 56, 50],
			[1, 67, 49],
			[89, 90, 92],
			[22, 55, 80],
			[2, 73, 94],
			[34, 77, 78],
			[27, 74, 87],
			[55, 84, 90],
			[36, 13, 48],
			[46, 25, 61],
			[63, 55, 76],
			[49, 50, 56],
			[95, 54, 70],
			[96, 66, 73],
			[98, 79, 76],
			[97, 75, 82]
		].map((arr) => {
			let ns = arr.map((n) => n / 100);
			return new RgbColor(ns[0], ns[1], ns[2]).color();
		})
	},
	langfassung: {
		name: 'Langfassung',
		colors: [
			[0.6, 0.2],
			[0.1, 0.7],
			[0.9, 0.4],
			[0.2, 0.2],
			[0.5, 0.5],
			[0.8, 0.7]
		].map(([r, b]) => new RgbColor(r, 0, b).color())
	},
	rgbcube: {
		name: 'RGB-Würfel',
		colors: [0, 25, 50, 75, 100]
			.map((r) =>
				[0, 25, 50, 75, 100].map((g) =>
					[0, 25, 50, 75, 100].map((b) => new RgbColor(r / 100, g / 100, b / 100).color())
				)
			)
			.flat(3)
	},
	rgbcubedark: {
		name: 'RGB-Würfel dunkel',
		colors: [0, 25, 50, 75, 100]
			.map((r) =>
				[0, 25, 50, 75, 100].map((g) =>
					[0, 25, 50, 75, 100].map((b) => new RgbColor(r / 100, g / 100, b / 100).color())
				)
			)
			.flat(3)
			.filter((c) => c.oklab().l < 0.5)
	}
} satisfies Partial<Record<string, { name: string; colors: Color[] }>>;

function leftPadZeroes(len: number, num: number): string {
	let str = '' + num;
	while (str.length < len) str = '0' + str;
	return str;
}

export default presets;
